/**** Git Process Management Library ****
 *
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the ""Software""), to deal
 * in the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
**/

using System;

namespace Microsoft.TeamFoundation.GitApi
{
    /// <summary>
    /// Defines the kind(s) of trace information provided or listened for.
    /// </summary>
    [Flags]
    public enum TracerKind
    {
        None = 0,

        /// <summary>
        /// Messages generated by Git commands.
        /// </summary>
        Command = 1 << 0,

        /// <summary>
        /// Messages generated by trapping run-time errors and exceptions.
        /// </summary>
        Error = 1 << 1,

        /// <summary>
        /// Generic message used to provide run-time updates.
        /// </summary>
        Message = 1 << 2,

        /// <summary>
        /// Message generated by performance monitoring.
        /// </summary>
        Performance = 1 << 3,

        /// <summary>
        /// Messages generated by process creation and monitoring.
        /// </summary>
        Process = 1 << 4,

        /// <summary>
        /// Messages generated by trapping run-time errors and/or unexpected state conditions.
        /// </summary>
        Warning = 1 << 5,

        /// <summary>
        /// Any/all message types.
        /// </summary>
        Any = Command
            | Error
            | Message
            | Performance
            | Process
            | Warning,

        /// <summary>
        /// Messages related to Git command performance.
        /// </summary>
        CommandPerformance = Command | Performance,

        /// <summary>
        /// Messages related to process performance.
        /// </summary>
        ProcessPerformance = Process | Performance,
    }
}
